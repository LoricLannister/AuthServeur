{"version":3,"sources":["../../config/express.js"],"names":["express","require","glob","favicon","logger","cookieParser","bodyParser","compress","methodOverride","module","exports","app","config","env","process","NODE_ENV","locals","ENV","ENV_DEVELOPMENT","set","root","use","json","urlencoded","extended","static","controllers","sync","forEach","controller","req","res","next","err","Error","status","get","render","message","error","title"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,IAAIE,UAAUF,QAAQ,eAAR,CAAd;AACA,IAAIG,SAASH,QAAQ,QAAR,CAAb;AACA,IAAII,eAAeJ,QAAQ,eAAR,CAAnB;AACA,IAAIK,aAAaL,QAAQ,aAAR,CAAjB;AACA,IAAIM,WAAWN,QAAQ,aAAR,CAAf;AACA,IAAIO,iBAAiBP,QAAQ,iBAAR,CAArB;;AAEAQ,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,MAAf,EACjB;AACE,MAAIC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;AACAJ,MAAIK,MAAJ,CAAWC,GAAX,GAAiBJ,GAAjB;AACAF,MAAIK,MAAJ,CAAWE,eAAX,GAA6BL,OAAO,aAApC;;AAEAF,MAAIQ,GAAJ,CAAQ,OAAR,EAAiBP,OAAOQ,IAAP,GAAc,YAA/B;AACAT,MAAIQ,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA;AACAR,MAAIU,GAAJ,CAAQjB,OAAO,KAAP,CAAR;AACAO,MAAIU,GAAJ,CAAQf,WAAWgB,IAAX,EAAR;AACAX,MAAIU,GAAJ,CAAQf,WAAWiB,UAAX,CAAsB;AAC5BC,cAAU;AADkB,GAAtB,CAAR;AAGAb,MAAIU,GAAJ,CAAQhB,cAAR;AACAM,MAAIU,GAAJ,CAAQd,UAAR;AACAI,MAAIU,GAAJ,CAAQrB,QAAQyB,MAAR,CAAeb,OAAOQ,IAAP,GAAc,SAA7B,CAAR;AACAT,MAAIU,GAAJ,CAAQb,gBAAR;;AAEA,MAAIkB,cAAcxB,KAAKyB,IAAL,CAAUf,OAAOQ,IAAP,GAAc,uBAAxB,CAAlB;AACAM,cAAYE,OAAZ,CAAoB,UAAUC,UAAV,EACpB;AACE5B,YAAQ4B,UAAR,EAAoBlB,GAApB;AACD,GAHD;;AAKAA,MAAIU,GAAJ,CAAQ,UAAUS,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EACR;AACE,QAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,QAAIE,MAAJ,GAAa,GAAb;AACAH,SAAKC,GAAL;AACD,GALD;;AAOA,MAAItB,IAAIyB,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EACA;AACEzB,QAAIU,GAAJ,CAAQ,UAAUY,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EACR;AACED,UAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,UAAIM,MAAJ,CAAW,OAAX,EAAoB;AAClBC,iBAASL,IAAIK,OADK;AAElBC,eAAON,GAFW;AAGlBO,eAAO;AAHW,OAApB;AAKD,KARD;AASD;;AAED7B,MAAIU,GAAJ,CAAQ,UAAUY,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EACR;AACED,QAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,QAAIM,MAAJ,CAAW,OAAX,EAAoB;AAClBC,eAASL,IAAIK,OADK;AAElBC,aAAO,EAFW;AAGlBC,aAAO;AAHW,KAApB;AAKD,GARD;;AAUA,SAAO7B,GAAP;AACD,CAzDD","file":"express.js","sourcesContent":["var express = require('express');\nvar glob = require('glob');\n\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar compress = require('compression');\nvar methodOverride = require('method-override');\n\nmodule.exports = function (app, config)\n{\n  var env = process.env.NODE_ENV || 'development';\n  app.locals.ENV = env;\n  app.locals.ENV_DEVELOPMENT = env == 'development';\n\n  app.set('views', config.root + '/app/views');\n  app.set('view engine', 'ejs');\n\n  // app.use(favicon(config.root + '/public/img/favicon.ico'));\n  app.use(logger('dev'));\n  app.use(bodyParser.json());\n  app.use(bodyParser.urlencoded({\n    extended: true\n  }));\n  app.use(cookieParser());\n  app.use(compress());\n  app.use(express.static(config.root + '/public'));\n  app.use(methodOverride());\n\n  var controllers = glob.sync(config.root + '/app/controllers/*.js');\n  controllers.forEach(function (controller)\n  {\n    require(controller)(app);\n  });\n\n  app.use(function (req, res, next)\n  {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n  });\n\n  if (app.get('env') === 'development')\n  {\n    app.use(function (err, req, res, next)\n    {\n      res.status(err.status || 500);\n      res.render('error', {\n        message: err.message,\n        error: err,\n        title: 'error'\n      });\n    });\n  }\n\n  app.use(function (err, req, res, next)\n  {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: {},\n      title: 'error'\n    });\n  });\n\n  return app;\n};\n"]}